name: digital-menu

services:
  postgres:
    image: postgres
    container_name: digital-menu-postgres
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - digital-menu_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - digital-menu-network

  minio:
    image: bitnami/minio:latest
    container_name: digital-menu-minio
    user: "0:0"
    env_file:
      - .env
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - digital-menu_minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - digital-menu-network

  # Uncomment and configure your app server later
  # server:
  #   build: .
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     minio:
  #       condition: service_healthy
  #   env_file:
  #     - .env
  #   networks:
  #     - digital-menu-network

volumes:
  digital-menu_postgres_data:
  digital-menu_minio_data:
    driver: local # this ensures data persistence on host machine for MinIO

networks:
  digital-menu-network:
    driver: bridge
